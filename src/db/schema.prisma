// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../generated"
}

enum Roles {
  ADMIN
  USER
}

model Permission {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  roles       Role[]
  users       User[]    @relation("UserToPermission")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  createdBy   User?      @relation(fields: [createdById], references: [id])
  createdById String?
}

model Role {
  id          String       @id @default(uuid())
  name        Roles        @unique
  description String?
  users       User[]       @relation("UserToRole")
  permissions Permission[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime?    @updatedAt
  createdBy   User?         @relation(fields: [createdById], references: [id])
  createdById String?
}

model User {
  id          String       @id @default(uuid())
  firstName   String
  lastName    String
  email       String       @unique
  /// @TypeGraphQL.omit(output: true)
  password    String
  role        Role         @relation("UserToRole", fields: [roleId], references: [id])
  roleId      String
  permissions Permission[] @relation("UserToPermission")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime?    @updatedAt
  createdBy   User?         @relation(fields: [createdById], references: [id])
  createdById String?
  User        User[]       @relation("UserToUser")
  Role        Role[]
  Permission  Permission[]
}
